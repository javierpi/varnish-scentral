<?php

/**
 * Implements hook_install().
 */
function authority_install(){

  // To create a new Entity Type simple create an object of the Entity Type class
  $entity_type = new EntityType();

  // An entity type is composed of 3 things: name, lable, and properties. The
  // name is a the machine name (letters, numbers, and underscores only, no
  // spaces). The label is the human readable name and it is used mainly for GUI
  // displays.
  $entity_type->name = "authority";
  $entity_type->label = "Authority";

  // By default our entity types come with 2 properties, an id, and a type. This
  // means that any entity of this type that is created (and since it is
  // deafult, any entity creted to eck at all), will have an id and an type
  // properties. The id is a unique to this type numerical identifier. The type
  // property is used to store the bundle of the entity.

  // We can easily add new properties to an entity type by using the addProperty
  // method.
  $entity_type->addProperty('lastname', 'Last Name', 'text', 'labeled_text');
  $entity_type->addProperty('name', 'Name', 'text', 'labeled_text');
  $entity_type->addProperty('created', 'Created', 'integer', 'created');
  $entity_type->addProperty('changed', 'Changed', 'integer', 'changed');
  $entity_type->addProperty('uuid', 'uuid', 'uuid', 'uuid');

  // If you look at the method in eck.classes.inc, you will notice that it takes
  // 3 arguments and 1 optional argument. The required arguments are 'name',
  // 'label', and 'type'. The name an the lable serve the same function that
  // name and label serve as part of the entity type. The type argument defines
  // the type of data that we can store in that property.

  // SUPPORTED TYPES: 'text', 'integer', 'decimal', 'positive_integer', 'uuid'
  // If you want more information on how what this types look like in terms of
  // their schema, you can look at the function eck_property_type_schema() in
  // eck.properties.inc
  // @todo: Allow users to define new types.

  // The last argument is a behavior.

  // After all of the properties we want have been added, we simply need to save
  // the property.
  $entity_type->save();

  $bundle = new Bundle();
  $bundle->name = 'authority_bundle';
  $bundle->label = 'authority bundle';
  $bundle->entity_type = $entity_type->name;
  $bundle->save();
}

/**
 * Implements hook_uninstall().
 */
function authority_uninstall(){
  // Deleting and entity type, and all of its content is as easy as creating
  // one. All we have to do is load the entity types that we want to delete, and
  // called the delete method.
  $entity_type = EntityType::loadByName('authority');
  $entity_type->delete();

  // After the module is uninstalled, the entity type is gone.
}
